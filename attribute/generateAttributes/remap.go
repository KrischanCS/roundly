package main

type MethodParamName struct {
	FuncName, paramName string
}

var mappings = map[string]MethodParamName{
	"accept-charset":           {"AcceptCharset", "acceptCharset"},
	"accesskey":                {"AccessKey", "accessKey"},
	"allowfullscreen":          {"AllowFullScreen", "allowFullScreen"},
	"autocapitalize":           {"AutoCapitalize", "autoCapitalize"},
	"autocomplete":             {"AutoComplete", "autoComplete"},
	"autocorrect":              {"AutoCorrect", "autoCorrect"},
	"autofocus":                {"AutoFocus", "autoFocus"},
	"autoplay":                 {"AutoPlay", "autoPlay"},
	"charset":                  {"CharSet", "charSet"},
	"colorspace":               {"ColorSpace", "colorSpace"},
	"colspan":                  {"ColSpan", "colSpan"},
	"contenteditable":          {"ContentEditable", "contentEditable"},
	"coords":                   {"Coords", "coords"},
	"crossorigin":              {"CrossOrigin", "crossOrigin"},
	"datetime":                 {"DateTime", "dateTime"},
	"defer":                    {"Defer", "deferV"}, // defer must be renamed to avoid conflict with defer key word
	"dirname":                  {"DirName", "dirName"},
	"enctype":                  {"EncType", "encType"},
	"enterkeyhint":             {"EnterKeyHint", "enterKeyHint"},
	"fetchpriority":            {"FetchPriority", "fetchPriority"},
	"for":                      {"For", "forV"}, // for must be renamed to avoid conflict with defer key word
	"formaction":               {"FormAction", "formAction"},
	"formenctype":              {"FormEnctype", "formEnctype"},
	"formmethod":               {"FormMethod", "formMethod"},
	"formnovalidate":           {"FormNoValidate", "formNoValidate"},
	"formtarget":               {"FormTarget", "formTarget"},
	"href":                     {"HRef", "hRef"},
	"hreflang":                 {"HRefLang", "hRefLang"},
	"http-equiv":               {"HttpEquiv", "httpEquiv"},
	"imagesizes":               {"ImageSizes", "imageSizes"},
	"imagesrcset":              {"ImageSrcSet", "imageSrcSet"},
	"inputmode":                {"InputMode", "inputMode"},
	"ismap":                    {"IsMap", "isMap"},
	"itemid":                   {"ItemId", "itemId"},
	"itemprop":                 {"ItemProp", "itemProp"},
	"itemref":                  {"ItemRef", "itemRef"},
	"itemscope":                {"ItemScope", "itemScope"},
	"itemtype":                 {"ItemType", "itemType"},
	"maxlength":                {"MaxLength", "maxLength"},
	"minlength":                {"MinLength", "minLength"},
	"nomodule":                 {"NoModule", "noModule"},
	"nonce":                    {"Nonce", "nonce"},
	"novalidate":               {"NoValidate", "noValidate"},
	"placeholder":              {"PlaceHolder", "placeHolder"},
	"playsinline":              {"PlaysInline", "playsInline"},
	"popover":                  {"PopOver", "popOver"},
	"popovertarget":            {"PopOverTarget", "popOverTarget"},
	"popovertargetaction":      {"PopOverTargetAction", "popOverTargetAction"},
	"preload":                  {"PreLoad", "preLoad"},
	"readonly":                 {"ReadOnly", "readOnly"},
	"referrerpolicy":           {"ReferrerPolicy", "referrerPolicy"},
	"rowspan":                  {"RowSpan", "rowSpan"},
	"sandbox":                  {"SandBox", "sandBox"},
	"shadowrootclonable":       {"ShadowRootClonable", "shadowRootClonable"},
	"shadowrootdelegatesfocus": {"ShadowRootDelegatesFocus", "shadowRootDelegatesFocus"},
	"shadowrootmode":           {"ShadowRootMode", "shadowRootMode"},
	"shadowrootserializable":   {"ShadowRootSerializable", "shadowRootSerializable"},
	"spellcheck":               {"SpellCheck", "spellCheck"},
	"srcdoc":                   {"SrcDoc", "srcDoc"},
	"srclang":                  {"SrcLang", "srcLang"},
	"srcset":                   {"SrcSet", "srcSet"},
	"tabindex":                 {"TabIndex", "tabIndex"},
	"type":                     {"Type", "typeV"}, // type must be renamed to avoid conflict with type key word
	"usemap":                   {"UseMap", "useMap"},
	"writingsuggestions":       {"WritingSuggestions", "writingSuggestions"},
}
