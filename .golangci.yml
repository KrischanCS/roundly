version: "2"

linters:
  default: all
  disable:
    - depguard # Not restricting dependencies at the moment
    - ireturn # Allow returning interfaces
    - testpackage # Allow white-box testing
    - tparallel # Using paralleltest instead, it allows ignoring subtests
    - wrapcheck # Allow returning unwrapped errors
    - noctx # Allow http requests without context, http requests in this package are only called in generation, and prefer readability there over robustness.
    - exhaustruct # Allow structs where not all fields are initialized. If this is not wanted, create a new function and make the struct private.


  settings:

    errcheck:
      check-type-assertions: true # Always check type assertions
      check-blank: true # Don't allow swallowing errors

    exhaustive:
      check:
        - switch
        - map
      default-signifies-exhaustive: true

    gocognit:
      min-complexity: 10 # Authors of gocognit recommend to change the default from 30 to 10-20, feeling good with 10 at the momment.

    paralleltest:
      ignore-missing-subtests: true # If there are lots of tests and short test-cases (subtest), it should be faster there should be no gains in running all subtests in parallel, and calling t.Parallel() all the time just adds noise.

    revive:
      rules:
        - name: dot-imports
          arguments:
            - allowedPackages: # I recommend dot-imports for these packages, so allowing it especially for examples and testing
                - github.com/KrischanCS/htmfunc/element
                - github.com/KrischanCS/htmfunc/attribute
                - github.com/KrischanCS/htmfunc/text
                - github.com/KrischanCS/htmfunc/logic

    staticcheck:
      initialisms: [] # Not check for any initialism, I think it hurts readability more than it helps (I know I fight the language idioms here, might rethink it later).
      checks:
        - all # Enable all checks
        - -ST1001 # allowing some packages to be dot-imported, and handling them with the revive rule above

    testifylint:
      disable:
        - require-error # I only use require in the "Arrange" phase of tests, in the "Assert" phase I prefer normal assertions also for errors

    lll:
      line-length: 100
      tab-width: 4

    varnamelen:
      max-distance: 15 # Don't care too much about short identifiers in go, changing from default 6 to 15
      ignore-decls:
        - i int # index
        - ok bool # ok pattern
        # Writers
        - w io.Writer
        - w Writer
        - w *bytes.Buffer
        - w htmfunc.Writer

        # String builders
        - sb strings.Builder
        - sb *strings.Builder
      ignore-names:
        - tc # TestCase, many different types
        - fn # function parameters, no common signature

    nlreturn:
      block-size: 2

    mnd:
      ignored-numbers:
        - '0666'
      ignored-functions:
        - '^make'

  exclusions:
    generated: lax
    paths:
      - vendor

formatters:
  enable:
    - gofmt
    - goimports
  exclusions:
    generated: lax
    paths:
      - vendor
